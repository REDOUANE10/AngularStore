{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//et les service angular peuvent être injectées dans nos composants ou dans nos services\n//AccountService singletons instancier au démarrage de l'application et détruits à\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/'; //Inject the customer HTTP IN OUR CONSTUCTOR\n  }\n\n  login(model) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(map(Respresponseonse => {\n      const user = response;\n    }));\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAC1B;AAIA;AACA,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAF1B,YAAO,GAAE,6BAA6B,CAAC;EAEE;;EAEvCC,KAAK,CAACC,KAAS;IAEb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,eAAe,EAAEF,KAAK,CAAC,CAACG,IAAI,CAErER,GAAG,CAAES,gBAAoB,IAAG;MAC1B,MAAMC,IAAI,GAAGC,QAAQ;IAEvB,CAAC,CAAC,CAGG;EACH;;AAhBWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAHb;AAAM","names":["map","AccountService","constructor","http","login","model","post","baseUrl","pipe","Respresponseonse","user","response","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\REDOUANE\\client\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';//nous avons un décorateur appeler Injectable\nimport { map } from 'rxjs';\n//et les service angular peuvent être injectées dans nos composants ou dans nos services\n@Injectable({\n  providedIn: 'root'\n})\n//AccountService singletons instancier au démarrage de l'application et détruits à\nexport class AccountService {// it's the responsible to send request HTTP to our customer\nbaseUrl= 'https://localhost:5001/api/';//Inject the customer HTTP IN OUR CONSTUCTOR\n\n  constructor(private http:HttpClient) { }\n\n  login(model:any)\n  {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n\nmap((Respresponseonse:any)=> {\n  const user = response;\n\n})\n\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}