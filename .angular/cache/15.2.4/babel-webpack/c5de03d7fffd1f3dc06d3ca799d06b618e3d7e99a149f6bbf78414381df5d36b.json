{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//et les service angular peuvent être injectées dans nos composants ou dans nos services\n//AccountService singletons instancier au démarrage de l'application et détruits à\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/'; //Inject the customer HTTP IN OUR CONSTUCTOR\n    this.currentUserSource = new BehaviorSubject(null);\n    //pour signifie que c'est obersvable\n    this.currentUsers$ = this.currentUserSource.asObservable();\n  }\n  login(model) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAE3C;AAIA;AACA,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAP1B,YAAO,GAAE,6BAA6B,CAAC;IAC/B,sBAAiB,GAAG,IAAIJ,eAAe,CAAQ,IAAI,CAAC;IAC5D;IACA,kBAAa,GAAG,IAAI,CAACK,iBAAiB,CAACC,YAAY,EAAE;EAIZ;EAEvCC,KAAK,CAACC,KAAS;IAEb,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,IAAI,CAACC,OAAO,GAAG,eAAe,EAAEF,KAAK,CAAC,CAACG,IAAI,CAE3EV,GAAG,CAAEW,QAAa,IAAG;MACnB,MAAMC,IAAI,GAAGD,QAAQ;MACrB,IAAGC,IAAI,EACP;QAEAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;IAEpD,CAAC,CAAC,CACG;EACH;EAEAK,MAAM;IAEJJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;;AA5BWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YAHb;AAAM","names":["BehaviorSubject","map","AccountService","constructor","http","currentUserSource","asObservable","login","model","post","baseUrl","pipe","response","user","localStorage","setItem","JSON","stringify","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\REDOUANE\\client\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';//nous avons un décorateur appeler Injectable\nimport { BehaviorSubject, map } from 'rxjs';\nimport { User } from 'src/_models/user';\n//et les service angular peuvent être injectées dans nos composants ou dans nos services\n@Injectable({\n  providedIn: 'root'\n})\n//AccountService singletons instancier au démarrage de l'application et détruits à\nexport class AccountService {// it's the responsible to send request HTTP to our customer\nbaseUrl= 'https://localhost:5001/api/';//Inject the customer HTTP IN OUR CONSTUCTOR\nprivate currentUserSource = new BehaviorSubject<User >(null);\n//pour signifie que c'est obersvable\ncurrentUsers$ = this.currentUserSource.asObservable();\n\n\n\n  constructor(private http:HttpClient) { }\n\n  login(model:any)\n  {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n\nmap((response:User)=> {\n  const user = response;\n  if(user)\n  {\n\n  localStorage.setItem('user', JSON.stringify(user))\n  }\n})\n    );\n  }\n\n  logout()\n  {\n    localStorage.removeItem('user');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}